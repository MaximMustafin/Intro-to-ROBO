C++ - ключевые слова

extern - объявление глобальной переменной.
Проблемы глобальных переменных: масштабируемость, побочные эффекты, порядок инициализации.

static
Статическая глобальная переменная - это глобальная переменная доступная только в пределах модуля.
Статическая локальная переменная - это глобальная переменная, доступная только в пределах функции. Время жизни такой переменной - от первого вызова функции до конца программы.
Проблемы статических переменных: масштабируемость, побочные эффекты.
Статическая функция - это функция доступная только в пределах модуля
Статические глобальные переменные и статические функции проходят внутреннюю линковку.
Статические поля класса - это глобальные переменные, определенные внутри класса. Для доступа к статическим полям не нужен объект. Можно использовать для подсчета экземпляров данного класса.
Статические методы (функции класса) - это функции, определенные внутри класса и имеющие доступ к закрытым полям и методам. Для вызова статических методов не нужен объект.

inline 
Это ключевое слово касается только функций.
Советует компилятору встроить данную функцию.
inline double square (double x) { return x*x; }
-В месте вызова inline-функции должно быть известно её определение.
-inline-функции можно определять в заголовочных файлах.
-Все методы, определенные внутри класса, являются inline.
-При линковке из всех версий inline-функции (т.е её код из разных единиц трансляции) выбирается только одна.
-Все определения одной и той же inline-функции должно быть идентичным.
-inline - это совет компилятору, а не указ.

Правило одного определения (One Definition Rule - ODR)
-В пределах любой единицы трансляции сущности не могут иметь более одного определения.
-В пределах программы глобальные переменные и не inline-функции не могут иметь больше одного определения.
-Классы и inline-функции могут определятся в более чем одной единице трансляции, но определения обязаны совпадать.

friend
Дружественные классы
Дружественные функции - можно определять прямо внутри описания класса (они становятся inline)
Дружественные методы
Общие правила friend:
-отношение дружбы не симметрично.
-отношение дружбы не транзитивно.
-отношение наследования не задает отношение дружбы.
-отношение дружбы сильнее, чем отношение наследования.
Вывод - стоит избегать ключевого слова friend, так как оно нарушает инкапсуляцию.

ROS - tf
Плюсы:
-распределенная система
-нет потери данных
-нет вычислительной стоимости
-пользователю не нужно беспокоиться о том, где начало
-хранит в себе данные о прошлом местоположении

Есть два типа узлов tf: Publisher and Subscriber

Команды:
view frames - как починить (sudo gedit /opt/ros/noetic/lib/tf/view_frames) m = r.search(vstr) -> m = r.search(str(vstr))
tf monitor - rosrun tf tf_monitor
tf echo - T(turtle1_turtle2) = T(turtle1_world) * T(world_turtle2) - rosrun tf tf_echo turtle1 turtle2
roswtf
static transform publisher

rosrun rviz rviz -d rospack find turtle_tf/rviz/turtle_rviz.rviz

rosrun tf tf_echo /world /turtle1







